/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as GetScriptJson } from "../Get.ral.json";
import { default as PopScriptJson } from "../Pop.ral.json";
import { default as PushScriptJson } from "../Push.ral.json";
import { default as SumScriptJson } from "../Sum.ral.json";
import { default as UpdateScriptJson } from "../Update.ral.json";

export const Get = new ExecutableScript<{
  contract: HexString;
  array: HexString;
  index: bigint;
  expected: bigint;
}>(Script.fromJson(GetScriptJson));
export const Pop = new ExecutableScript<{
  contract: HexString;
  array: HexString;
  expectedArray: HexString;
  expectedValue: bigint;
}>(Script.fromJson(PopScriptJson));
export const Push = new ExecutableScript<{
  contract: HexString;
  array: HexString;
  value: bigint;
  expected: HexString;
}>(Script.fromJson(PushScriptJson));
export const Sum = new ExecutableScript<{
  contract: HexString;
  array: HexString;
  expected: bigint;
}>(Script.fromJson(SumScriptJson));
export const Update = new ExecutableScript<{
  contract: HexString;
  array: HexString;
  index: bigint;
  value: bigint;
  expected: HexString;
}>(Script.fromJson(UpdateScriptJson));
