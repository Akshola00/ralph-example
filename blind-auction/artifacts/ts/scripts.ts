/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as AuctionEndScriptJson } from "../AuctionEnd.ral.json";
import { default as BidScriptJson } from "../Bid.ral.json";
import { default as CreateBidderScriptJson } from "../CreateBidder.ral.json";
import { default as RevealScriptJson } from "../Reveal.ral.json";
import { default as GetTokenScriptJson } from "../test/GetToken.ral.json";
import { default as WithdrawScriptJson } from "../Withdraw.ral.json";

export const AuctionEnd = new ExecutableScript<{ auction: HexString }>(
  Script.fromJson(AuctionEndScriptJson)
);
export const Bid = new ExecutableScript<{
  auction: HexString;
  blindedBid: HexString;
  amount: bigint;
}>(Script.fromJson(BidScriptJson));
export const CreateBidder = new ExecutableScript<{ auction: HexString }>(
  Script.fromJson(CreateBidderScriptJson)
);
export const Reveal = new ExecutableScript<{
  auction: HexString;
  values: HexString;
  fakes: HexString;
  secrets: HexString;
}>(Script.fromJson(RevealScriptJson));
export const GetToken = new ExecutableScript<{
  token: HexString;
  amount: bigint;
}>(Script.fromJson(GetTokenScriptJson));
export const Withdraw = new ExecutableScript<{ auction: HexString }>(
  Script.fromJson(WithdrawScriptJson)
);
